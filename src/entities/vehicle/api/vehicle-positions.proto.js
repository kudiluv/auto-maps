'use strict'; // code generated by pbf v3.2.1

var RoutePosition = exports.RoutePosition = {
    "IDLE": {
        "value": 1,
        "options": {}
    },
    "AB": {
        "value": 2,
        "options": {}
    },
    "BA": {
        "value": 3,
        "options": {}
    }
};

var RouteType = exports.RouteType = {
    "bus": {
        "value": 1,
        "options": {}
    },
    "trol": {
        "value": 2,
        "options": {}
    },
    "tram": {
        "value": 3,
        "options": {}
    },
    "suburbanbus": {
        "value": 4,
        "options": {}
    },
    "train": {
        "value": 5,
        "options": {}
    }
};

// VehiclePositionResponse ========================================

var VehiclePositionResponse = exports.VehiclePositionResponse = {};

VehiclePositionResponse.read = function (pbf, end) {
    return pbf.readFields(VehiclePositionResponse._readField, {vehiclePositions: []}, end);
};
VehiclePositionResponse._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.vehiclePositions.push(VehiclePosition.read(pbf, pbf.readVarint() + pbf.pos));
};
VehiclePositionResponse.write = function (obj, pbf) {
    if (obj.vehiclePositions) for (var i = 0; i < obj.vehiclePositions.length; i++) pbf.writeMessage(1, VehiclePosition.write, obj.vehiclePositions[i]);
};

// VehiclePosition ========================================

var VehiclePosition = exports.VehiclePosition = {};

VehiclePosition.read = function (pbf, end) {
    return pbf.readFields(VehiclePosition._readField, {id: 0, position: null, speed: 0, vehicle: null, rotation: 0, route_position: ""}, end);
};
VehiclePosition._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint(true);
    else if (tag === 2) obj.position = PointMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.speed = pbf.readVarint(true);
    else if (tag === 4) obj.vehicle = Vehicle.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.rotation = pbf.readVarint(true);
    else if (tag === 6) obj.route_position = pbf.readString();
};
VehiclePosition.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.position) pbf.writeMessage(2, PointMessage.write, obj.position);
    if (obj.speed) pbf.writeVarintField(3, obj.speed);
    if (obj.vehicle) pbf.writeMessage(4, Vehicle.write, obj.vehicle);
    if (obj.rotation) pbf.writeVarintField(5, obj.rotation);
    if (obj.route_position) pbf.writeStringField(6, obj.route_position);
};

// Vehicle ========================================

var Vehicle = exports.Vehicle = {};

Vehicle.read = function (pbf, end) {
    return pbf.readFields(Vehicle._readField, {id: 0, vehicleId: "", route: null}, end);
};
Vehicle._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint(true);
    else if (tag === 2) obj.vehicleId = pbf.readString();
    else if (tag === 3) obj.route = Route.read(pbf, pbf.readVarint() + pbf.pos);
};
Vehicle.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.vehicleId) pbf.writeStringField(2, obj.vehicleId);
    if (obj.route) pbf.writeMessage(3, Route.write, obj.route);
};

// Route ========================================

var Route = exports.Route = {};

Route.read = function (pbf, end) {
    return pbf.readFields(Route._readField, {id: 0, type: "", routeNum: "", ABName: "", BAName: ""}, end);
};
Route._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readVarint(true);
    else if (tag === 2) obj.type = pbf.readString();
    else if (tag === 3) obj.routeNum = pbf.readString();
    else if (tag === 4) obj.ABName = pbf.readString();
    else if (tag === 5) obj.BAName = pbf.readString();
};
Route.write = function (obj, pbf) {
    if (obj.id) pbf.writeVarintField(1, obj.id);
    if (obj.type) pbf.writeStringField(2, obj.type);
    if (obj.routeNum) pbf.writeStringField(3, obj.routeNum);
    if (obj.ABName) pbf.writeStringField(4, obj.ABName);
    if (obj.BAName) pbf.writeStringField(5, obj.BAName);
};

// PointMessage ========================================

var PointMessage = exports.PointMessage = {};

PointMessage.read = function (pbf, end) {
    return pbf.readFields(PointMessage._readField, {type: "", coordinates: []}, end);
};
PointMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.type = pbf.readString();
    else if (tag === 2) pbf.readPackedFloat(obj.coordinates);
};
PointMessage.write = function (obj, pbf) {
    if (obj.type) pbf.writeStringField(1, obj.type);
    if (obj.coordinates) pbf.writePackedFloat(2, obj.coordinates);
};
